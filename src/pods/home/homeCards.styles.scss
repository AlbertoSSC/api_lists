$primaryColor: #1976d2;
$primaryLight: #90caf9;
$primaryDark: hsl(212, 80%, 42%);

$secondaryGreyLight: rgba(216, 216, 216, 0.5);
$secondaryGreyLightDark: rgb(87, 87, 87);
$secondaryGrey: rgb(171, 171, 171);

$bp-md: 600px;
$bp-lg: 800px;

$bodyBG: url("./pods/home/assets/images/GithubRM_bg.png");
$bodyVerticalBG: url("./pods/Home/assets/images/GithubRM_VertBg.png");

:root {
  --d: 700ms;
  --e: cubic-bezier(0.22, 0.8, 0.22, 0.9);
}

body {
  background-image: $bodyVerticalBG;
  background-color: rgba(255, 255, 255, 0.5);
  background-size: 120vw;
  background-repeat: no-repeat;
  background-position: -50px 300px;
  background-blend-mode: screen;

  @media (min-width: $bp-md) {
    background-image: $bodyBG;
    background-position: -70px 350px;
  }
  @media (min-width: $bp-lg) {
    background-size: 115vw;
    background-position: -70px 250px;
  }
}

* {
  box-sizing: border-box;
}

.home-header-content {
  display: flex;
  flex-direction: column;
  align-items: center;

  & span {
    color: $secondaryGreyLightDark;
  }
}

.react-home-img {
  width: 200px;
  margin: 15px;
}

.page-content {
  display: grid;
  grid-gap: 1rem;
  padding: 2rem;
  max-width: 580px;
  margin: 0 auto;

  @media (min-width: $bp-md) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.card {
  position: relative;
  display: flex;
  align-items: flex-end;
  overflow: hidden;
  padding: 1rem;
  width: 100%;
  text-align: center;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.1), 0 2px 2px rgba(0, 0, 0, 0.1),
    0 4px 4px rgba(0, 0, 0, 0.1), 0 8px 8px rgba(0, 0, 0, 0.1), 0 16px 16px rgba(0, 0, 0, 0.1);

  color: whitesmoke;
  border: 1px solid $primaryLight;
  border-radius: 12px;

  transition: transform var(--d) var(--e), background-size var(--d) var(--e);

  background-color: rgba(255, 255, 255, 0.9);
  background-size: 50%;
  background-repeat: no-repeat;
  background-position: center;

  @media (min-width: $bp-md) {
    height: 50vh;
  }

  &:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 110%;
    background-size: cover;
    background-position: 0 0;
    transition: transform calc(var(--d) * 1.5) var(--e);
    pointer-events: none;
  }

  &:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 200%;
    pointer-events: none;
    background-color: hsl(210, 79%, 46%, 0.5);
    transform: translateY(-50%);
    transition: transform calc(var(--d) * 2) var(--e);
  }
}

.content {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding: 1rem;
  transition: transform var(--d) var(--e);
  z-index: 1;
}

.title {
  font-size: 1.3rem;
  font-weight: bold;
  line-height: 1.2;
}

.copy {
  font-size: 1.125rem;
  font-style: italic;
  margin-bottom: 2.5rem;
}

@media (hover: hover) and (min-width: $bp-md) {
  .card{
    background-blend-mode: normal;
  }
  .title {
    width: 250px;
    padding: 8px;
    background-color: $primaryColor;
    transition: background-color var(--d) var(--e);
  }
  .card:hover .title {
    background-color: transparent;
  }

  .card:after {
    transform: translateY(50%);
  }

  .content {
    transform: translateY(calc(100% - 3.5rem));

    > *:not(.title) {
      opacity: 0;
      transform: translateY(1rem);
      transition: transform var(--d) var(--e), opacity var(--d) var(--e);
    }
  }

  .card:hover,
  .card:focus-within {
    align-items: center;

    &:after {
      transform: translateY(-50%);
    }

    .content {
      transform: translateY(0);

      > *:not(.title) {
        opacity: 1;
        transform: translateY(0);
        transition-delay: calc(var(--d) / 8);
      }
    }

    background-blend-mode: color;
    background-size: 200%;
    background-position: 20px 100px;
    transform: scale(1.05);
  }
}
